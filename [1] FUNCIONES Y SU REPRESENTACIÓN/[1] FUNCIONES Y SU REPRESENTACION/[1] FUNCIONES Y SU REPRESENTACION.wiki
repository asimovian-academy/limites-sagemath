= PRECÁLCULO =

== FUNCIONES Y SUS LÍMITES ==

=== Juliho Castillo Colmenares  ===

''IMPORTANTE: Para correr el siguiente código, necesitarás [https://youtu.be/8KT9GMruOrU Sagemath.]''

El cálculo es muy diferente de las matemáticas que has estudiado hasta hoy, porque tiene que ver con cambios. En esta sección estudiaremos el comportamiento en cambio de funciones y sus límites.

== Funciones y su representación.  ==

Las funciones surgen cuando una cantidad depende de otra. Consideremos algunos ejemplos.

==== Ejemplo A ====

El área de un círculo depende del radio del mismo:<br />
<math display="inline"> A = \pi r^2 </math>

<syntaxhighlight lang="python">def area_circulo(radio):
    return 3.14159*radio^2

print(area_circulo(2.5267490372))</syntaxhighlight>
<pre class="">20.0573578810604</pre>
==== Ejemplo B ====

La población humana (en todo el mundo) <math display="inline">P</math> depende del tiempo <math display="inline">t</math>. En la siguiente tabla, se muestra el año y la población en milliones correspondiente:

<syntaxhighlight lang="python">poblacion = [
    [1900, 1650],
    [1910, 1750],
    [1920, 1860],
    [1930, 2070],
    [1940, 2300],
    [1950, 2560],
    [1960, 3040],
    [1970, 3710],
    [1980, 4450],
    [1990, 5280],
    [2000, 6080],
    [2010, 6870]
            ]</syntaxhighlight>
A partir de esta tabla, podemos crear una función punto a punto:

<syntaxhighlight lang="python">def P(t):
    for dato in poblacion:
        if t==dato[0]:
            return dato[1]
        
print(P(1950))</syntaxhighlight>
<pre class="">2560</pre>
==== Ejemplo C ====

El costo <math display="inline">C</math> de enviar un paquete depende del peso <math display="inline">w</math>. Por ejemplo, supongamos que los precio están dados por las siguiente reglas:

* Menor o igual a 10 kgs: Costo fijo de $150 más $10 por kilogramo
* Mayor a 10 kgs: $25 por kilogramo
* La capacidad máxima del envíoi es 20 kgs

<syntaxhighlight lang="python">"""
Definimos la función de costo C en función del peso w
"""
def C(w):
    if w<0:
        return "¿Seguro que estás enviando algo?"
    elif w<=10:
        return 150 + 10*w
    elif w<=20:
        return 25*w
    else:
        return "¡Excediste la capacidad!"    </syntaxhighlight>
<syntaxhighlight lang="python">"""
Graficamos en el intervalo (0,20)
"""
import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0,20,0.01)
C = np.vectorize(C)
y = C(x)

plt.plot(x,y)
plt.show()</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_10_0.png|thumb|none]]

==== Ejemplo D ====

La aceleracion vertical <math display="inline">a</math> del suelo en un terremoto<br />
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\IM10101.png|fig:]]

<syntaxhighlight lang="python">"""
Simularemos la acelaración a respecto al tiempo t
"""
def a(t):
    return np.sin(t)*np.random.normal()</syntaxhighlight>
<syntaxhighlight lang="python">"""
Graficamos en el intervalo (0, pi)
"""
x = np.arange(0,np.pi,0.01)
a = np.vectorize(a)
y = a(x)

plt.plot(x,y)</syntaxhighlight>


<pre class="">[&lt;matplotlib.lines.Line2D object at 0x6ffe91c1f1d0&gt;]</pre>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_13_1.png|thumb|none]]

Una '''función''' <math display="inline">f</math> es una regla que asigna a cada elemento <math display="inline">x</math> de un conjunto <math display="inline">D</math> un elemento <math display="inline">f(x)</math> de un conjunto <math display="inline">E</math>.

Al conjunto <math display="inline">D</math> se le llama '''dominio''', mientras que a <math display="inline">E</math> se le llama '''contradominio'''.

<syntaxhighlight lang="python">x = var("x")
f(x) = exp(-x^2)*sin(x)
grafica = plot(f)
show(grafica)</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_15_0.png|thumb|none]]



<syntaxhighlight lang="python">grafica = plot(f, (x,-5,5))
show(grafica)</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_16_0.png|thumb|none]]

=== Representación de funciones ===

==== Ejercicio ====

Encuentre el dominio de cada función:

* <math display="inline">f(x)=\sqrt{x+2}</math>
* <math display="inline">g(x)=\dfrac{1}{x^2-x}</math>

==== Prueba de la linea vertical  ====

Una curva en el plano <math display="inline">xy</math> es la gráfica de una función <math display="inline">y=f(x)</math> si y solo si no existe línea vertical alguna que intersecte la curva más de dos veces.

==== Ejemplo ====

Determina si la ecuación <math display="inline">x^2-y^2=1</math> define una función <math display="inline">y=f(x)</math>.

<syntaxhighlight lang="python">x,y = var("x,y")
ecuacion = x^2-y^2==1
grafica = implicit_plot(ecuacion, (x,-2,2), (y,-2,2))
show(grafica)</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_21_0.png|thumb|none]]

==== Ejemplo ====

Determina si la ecuación <math display="inline">(x-1)^2=4(y-2)</math> define una función <math display="inline">y=f(x)</math>.

<syntaxhighlight lang="python">x,y = var("x,y")
ecuacion = (x-1)^2==4*(y-2)
grafica = implicit_plot(ecuacion, (x,0,2), (y,1,3))
show(grafica)</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_23_0.png|thumb|none]]

==== Ejemplo  ====

Determina si la gráfica de las ecuaciones paramétricas:<br />
<math display="inline"> x = 10t, y = 50+5t-\dfrac{1}{2}(9.8)t^2</math><br />
define una función <math display="inline">y=f(x)</math>.

<syntaxhighlight lang="python">t = var("t")
x(t) = 10*t
y(t) = 50+5*t-(1/2)*(9.8)*t^2
grafica = parametric_plot((x(t),y(t)), (t,0,1))

show(grafica)</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_25_0.png|thumb|none]]

==== Ejercicio de exploración ====

Las funciones anteriores representan la posición de un proyectil en función del tiempo. Determina gráficamente:

* la distancia a la que choca contra el suelo
* cuanto tiempo tarde en ocurrir esto
* la altura máxima y el tiempo en que se alcanza

¿Puedes determinar cuál es la función <math display="inline">y=f(x)</math>?

==== Ejercicio de exploración ====

Muchas relaciones fundamentales en matemáticas y física no se pueden expresar como funciones. Aún así se puede definir el dominio de una relación. Averigua en internet como es que se hace esto y determinalo gráficamente para la relación 

<math display="inline"> \dfrac{(x-2)^2}{9} + \dfrac{(y-3)^2}{4} = 1. </math>

''¿Cuál es el intervalo minimal en el eje <math display="inline">y</math> que necesitas para graficar completamente la relación?''

=== Funciones representadas a trozos ===

==== Ejemplo ====

Una función <math display="inline">f</math> esta definida por<br />
<math display="inline">f(x)=
\begin{cases}
1-x & x \leq 1\\
x^2 & x>1
\end{cases}
</math>

Evaluar <math display="inline">f(0), f(1), f(2)</math> y graficar la función.

<syntaxhighlight lang="python">def f(x):
    if x<=1:
        return 1-x
    else:
        return x**2</syntaxhighlight>
<syntaxhighlight lang="python">import numpy as np
f = np.vectorize(f)
x = [0,1,2]
y = f(x)
print(y)</syntaxhighlight>
<pre class="">[1 0 4]</pre>


<syntaxhighlight lang="python">import matplotlib.pyplot as plt

x = np.arange(0,2,0.001)
y = f(x)

plt.plot(x,y)
plt.show()</syntaxhighlight>
[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_32_0.png|thumb|none]]

==== Ejercicio (Valor absoluto) ====

* Investiga como se define la función ''valor absoluto''
* Implementala en <code>Python</code>
* Evaluala en el arreglo <math display="inline">x=-1,0,1</math>
* Traza la gráfica

=== Simetría ===

Si una función <math display="inline">f(x)</math> satisface la relación <math display="inline">f(x)=f(-x)</math> en su dominio, diremos que la función es '''par'''. Su gráfica es simétrica respecto al eje <math display="inline">y</math>.

==== Ejemplo ====

<math display="inline"> f(x) = x^2 </math>

<syntaxhighlight lang="python">x = var("x")
f(x) = x^2
show(f(-x))</syntaxhighlight>
<html><script type="math/tex; mode=display">\newcommand{\Bold}[1]{\mathbf{#1}}x^{2}</script></html>



<syntaxhighlight lang="python">plot(f)</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_37_0.png|thumb|none]]



==== Ejemplo ====

<math display="inline"> g(x) = cos(x) </math>

<syntaxhighlight lang="python">x = var("x")
g(x) = cos(x)
show(g(-x).simplify())</syntaxhighlight>
<html><script type="math/tex; mode=display">\newcommand{\Bold}[1]{\mathbf{#1}}\cos\left(x\right)</script></html>



<syntaxhighlight lang="python">plot(g, (x,-2*pi, 2*pi))</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_40_0.png|thumb|none]]



Si una función <math display="inline">f(x)</math> satisface la relación <math display="inline">f(-x)=-f(x)</math> en su dominio, diremos que la función es '''impar'''. Su gráfica es simétrica respecto al origen.

==== Ejemplo 4 ====

<math display="inline">f(x) = x^3</math>

<syntaxhighlight lang="python">x = var("x")
f(x) = x^3
show(f(-x).simplify())</syntaxhighlight>
<html><script type="math/tex; mode=display">\newcommand{\Bold}[1]{\mathbf{#1}}-x^{3}</script></html>



<syntaxhighlight lang="python">plot(f)</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_44_0.png|thumb|none]]



==== Ejemplo  ====

<math display="inline">g(x) = \sin(x)</math>

<syntaxhighlight lang="python">x = var("x")
g(x) = sin(x)
show(g(-x).simplify())</syntaxhighlight>
<html><script type="math/tex; mode=display">\newcommand{\Bold}[1]{\mathbf{#1}}-\sin\left(x\right)</script></html>



<syntaxhighlight lang="python">plot(g, (x,-pi,pi))</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_47_0.png|thumb|none]]



==== Ejercicio ====

Determina si las siguiente funciones son pares, impares o ninguna:

* <math display="inline">f(x)=x^5+x</math>
* <math display="inline">g(x)=1-x^4</math>
* <math display="inline">h(x)=2x-x^2</math>

==== Funciones crecientes y decrecientes ====

Una función <math display="inline">f</math> es '''creciente''' en un intervalo <math display="inline">I</math> si<br />
<math display="inline">f(x_0) < f(x_1)</math> siempre que <math display="inline">x_1 < x_2</math>.

Una función <math display="inline">f</math> es '''decreciente''' en un intervalo <math display="inline">I</math> si<br />
<math display="inline">f(x_0) < f(x_1)</math> siempre que <math display="inline">x_1 < x_2</math>.

'''Observación''' El intervalo es muy importante para determinar si la función es creciente o no. Consideremos la función <math display="inline">f(x)=x^2</math> en los intervalos

* <math display="inline">I=(-1,0)</math>
* <math display="inline">I=(0,1)</math>
* <math display="inline">I=(-1,-1)</math>

<syntaxhighlight lang="python">x = var("x")
f(x) = x^2</syntaxhighlight>
<syntaxhighlight lang="python">plot(f, (x,-1,0))</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_52_0.png|thumb|none]]



<syntaxhighlight lang="python">plot(f, (x,0,1))</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_53_0.png|thumb|none]]



<syntaxhighlight lang="python">plot(f, (x,-1,1))</syntaxhighlight>


[[File:C:\Users\julih\Dropbox%20(Centro%20Turing)\Repositorios\precalculo-sagemath\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACI%C3%93N\%5B1%5D%20FUNCIONES%20Y%20SU%20REPRESENTACION\output_54_0.png|thumb|none]]

